{"version":3,"sources":["component/Navbar/Navbar.module.css","component/Dialogs/Dialogs.module.css","component/Profile/MyPosts/MyPosts.module.css","component/Dialogs/DialogItem/DialogItem.module.css","component/Header/Header.module.css","component/Profile/MyPosts/Post/Post.module.css","component/Profile/ProfileInfo/ProfileInfo.module.css","component/Dialogs/Message/Message.module.css","component/Header/Header.tsx","component/Navbar/Navbar.tsx","component/Profile/MyPosts/Post/Post.tsx","redux/state.tsx","component/Profile/MyPosts/MyPosts.tsx","component/Profile/ProfileInfo/ProfileInfo.tsx","component/Profile/Profile.tsx","component/Dialogs/DialogItem/DialogItem.tsx","component/Dialogs/Message/Message.tsx","component/Dialogs/Dialogs.tsx","component/News/News.tsx","component/Music/Music.tsx","component/Settings/Settings.tsx","component/Users/Users.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","style","header","to","src","alt","Navbar","s","nav","item","isActive","active","Post","props","messages","likesCounts","UPDATE_NEW_POST_TEXT","ADD_POST","SEND_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","store","_state","profilePage","posts","id","message","newPostText","dialogPage","dialogs","name","newMessage","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","action","type","newPost","push","newText","body","MyPosts","postElements","map","p","postsBlock","value","onChange","e","text","currentTarget","onClick","ProfileInfo","description","Profile","DialogItems","dialog","Messages","Dialogs","state","dialogsElement","d","messagesElement","m","dialogItems","placeholder","News","Music","Settings","Users","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","ReactDOM","render","bind","document","getElementById"],"mappings":"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","file":"static/js/main.7e2680c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__eqcMv\",\"item\":\"Navbar_item__3b-uv\",\"active\":\"Navbar_active__1GiTZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3To99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1Rtas\",\"posts\":\"MyPosts_posts__2LUjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItems\":\"DialogItem_dialogItems__uLUZp\",\"active\":\"DialogItem_active__HIfQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2-4SC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1PIDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__2330y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__GkSED\",\"message\":\"Message_message__1iHMI\"};","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nexport const Header = () => {\r\n    return (\r\n        <header className={style.header}>\r\n         <NavLink to={'/profile'} ><img src='https://i.pinimg.com/236x/71/b3/e4/71b3e4159892bb319292ab3b76900930.jpg' alt={'image'}/></NavLink>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' className={({ isActive }) =>(isActive ?  s.active : \"\")}>Profile</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/dialogs'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>Messages</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/users'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>Users</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/news'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>News</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/music'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>Music</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/settings'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>Settings</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\ntype  PostPropsType = {\r\n    messages: string\r\n    likesCounts: number\r\n}\r\n\r\nexport const Post = (props: PostPropsType) => {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <img src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTFb5fMw2UHXHnnNcW6t2Dpa7A_Ubc-9sTvEA&usqp=CAU'} alt={'photo'}/>\r\n            {props.messages}\r\n            <div>\r\n                <span>like</span> {props.likesCounts}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_ TEXT'\r\nconst ADD_POST = 'ADD_POST'\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE_NEW_MESSAGE_TEXT'\r\n\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport  type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCounts: number\r\n}\r\nexport type DialogsPropsType = {\r\n    dialogs: DialogType[]\r\n    messages: MessageType[]\r\n    newMessage: string\r\n}\r\n\r\nexport type PostTypeProps = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n}\r\n\r\n\r\nexport type StateType = {\r\n    profilePage: PostTypeProps,\r\n    dialogPage: DialogsPropsType\r\n}\r\nexport type RootStoreType = {\r\n    _state: StateType\r\n    _callSubscriber: (state: StateType) => void\r\n    getState: () => void\r\n    subscribe: (observer: any) => void\r\n    dispatch: (action: any) => void\r\n}\r\n\r\nlet store: any = {\r\n    _state: {\r\n\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hi my friend', likesCounts: 20},\r\n                {id: 2, message: 'How are you', likesCounts: 15},\r\n            ],\r\n            newPostText: \"\"\r\n        },\r\n        dialogPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Oleg'},\r\n                {id: 2, name: 'Dimas'},\r\n                {id: 3, name: 'Any'},\r\n                {id: 4, name: 'Ilia'},\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'How are you'},\r\n                {id: 2, message: 'How are you'},\r\n                {id: 3, message: 'How are you'},\r\n            ],\r\n            newMessage: \"\"\r\n        },\r\n\r\n    },\r\n    _callSubscriber(_state: StateType) {\r\n        console.log(\"d\")\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer: any) {\r\n        this._callSubscriber = observer;\r\n    },\r\n    dispatch(action: any) {\r\n        if (action.type === ADD_POST) {\r\n            let newPost = {\r\n                id: 5,\r\n                message: this._state.profilePage.newPostText,\r\n                likesCounts: 12,\r\n            }\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.newPostText = '';\r\n            this._callSubscriber(this._state)\r\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\r\n            this._state.dialogPage.newMessage = action.body\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === SEND_MESSAGE) {\r\n            let body = this._state.dialogPage.newMessage;\r\n            this._state.dialogPage.messages.push({id: 4, message: body})\r\n            this._callSubscriber(this._state)\r\n        }\r\n    }\r\n}\r\n\r\n// export type AddPostType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\n// export type UpdateNewPostTexType = ReturnType<typeof updateNewPostTextAC>\r\nexport const updateNewPostTextAC = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText\r\n    }\r\n}\r\n// export type SendMessageType = ReturnType<typeof sendMessageAC>\r\nexport const sendMessageAC = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\n// export type UpdateNewMessageTexType = ReturnType<typeof updateNewMessageTextAC>\r\nexport const updateNewMessageTextAC = (body: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        body\r\n    }\r\n}\r\nexport default store;\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {addPostAC, PostType, updateNewPostTextAC} from \"../../../redux/state\";\r\n//\r\n// export type PostType = {\r\n//     id: number\r\n//     message: string\r\n//     likesCounts: number\r\n// }\r\ntype MyPostsTypeProps = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n    dispatch: (action: any) => void\r\n}\r\nexport const MyPosts = (props: MyPostsTypeProps) => {\r\n\r\n    let postElements = props.posts.map((p) => <Post messages={p.message} likesCounts={p.likesCounts}/>)\r\n\r\n    let addPost = () => {\r\n        props.dispatch(addPostAC())\r\n    }\r\n    let onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.dispatch(updateNewPostTextAC(text))\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div><textarea value={props.newPostText} onChange={onChangeHandler}>\r\n                </textarea></div>\r\n                <div>\r\n                    <button onClick={addPost}> Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nexport const ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg' alt={'images'}/>\r\n                <div className={s.description}>ava + description</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {PostType} from \"../../redux/state\";\r\n\r\ntype ProfileTypeProps = {\r\n    posts:PostType[],\r\n    newPostText: string\r\n    dispatch:(action:any)=>void;\r\n}\r\n\r\nexport const Profile = (props:ProfileTypeProps) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPosts  posts={props.posts}\r\n                      newPostText={props.newPostText}\r\n                      dispatch={props.dispatch}\r\n            />\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css'\r\n\r\ntype DialogItemsPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport const DialogItems = (props: DialogItemsPropsType) => {\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={'/dialogs' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\n\r\ntype MessagesTypeProps = {\r\n    message: string\r\n}\r\nexport const Messages = (props: MessagesTypeProps) => {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n    </div>\r\n}\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItems} from \"./DialogItem/DialogItem\";\r\nimport {Messages} from \"./Message/Message\";\r\nimport {RootStoreType, sendMessageAC, updateNewMessageTextAC} from \"../../redux/state\";\r\n//\r\n// export type DialogType = {\r\n//     id: number\r\n//     name: string\r\n// }\r\n//\r\n// export  type MessageType = {\r\n//     id: number\r\n//     message: string\r\n// }\r\n//\r\nexport type DialogsProps = {\r\n    store: RootStoreType\r\n}\r\nexport const Dialogs = (props: DialogsProps) => {\r\n    let state = props.store._state\r\n\r\n    let dialogsElement = state.dialogPage.dialogs.map((d) => <DialogItems name={d.name} id={d.id}/>)\r\n    let messagesElement = state.dialogPage.messages.map((m) => <Messages message={m.message}/>)\r\n    let newMessage = state.dialogPage.newMessage\r\n\r\n    let onSendMessageClick = () => {\r\n        props.store.dispatch(sendMessageAC())\r\n\r\n    }\r\n\r\nlet onUpdateNewMessageChange = (e:ChangeEvent<HTMLTextAreaElement>)=>{\r\n        newMessage = e.currentTarget.value\r\n    props.store.dispatch(updateNewMessageTextAC(newMessage))\r\n}\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea placeholder='Enter text' value={newMessage } onChange={onUpdateNewMessageChange}> </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>\r\n                            Send\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const News =()=>{\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const Music =()=>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const Settings =()=>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const Users =()=>{\r\n    return (\r\n        <div>\r\n            Users\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./component/Header/Header\";\nimport {Navbar} from \"./component/Navbar/Navbar\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {Profile} from \"./component/Profile/Profile\";\nimport {Dialogs} from \"./component/Dialogs/Dialogs\";\nimport {News} from './component/News/News';\nimport {Music} from './component/Music/Music';\nimport {Settings} from \"./component/Settings/Settings\";\nimport {Users} from \"./component/Users/Users\";\nimport {RootStoreType, StateType} from \"./redux/state\";\n\n\ntype  AppPropsType = {\n    dispatch: (action: any) => void\n    state: StateType\n    store: RootStoreType\n    // dialogs: DialogType[]\n    // messages: MessageType[]\n    // posts: PostType[]\n}\nconst App = (props: AppPropsType) => {\n\n    return (\n        <div className=\"app-wrapper\">\n            <Header/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n                <Routes>\n                    <Route path={'/profile'} element={\n                        <Profile\n                            posts={props.state.profilePage.posts} dispatch={props.dispatch}\n                            newPostText={props.state.profilePage.newPostText}\n                        />}/>\n                    <Route path={'/dialogs'} element={<Dialogs store={props.store}/>}/>\n                    <Route path={'/users/'} element={<Users/>}/>\n                    <Route path={'/news/'} element={<News/>}/>\n                    <Route path={'/music/'} element={<Music/>}/>\n                    <Route path={'/settings/'} element={<Settings/>}/>\n                </Routes>\n            </div>\n        </div>\n    );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\nimport store, {StateType} from \"./redux/state\";\n\n\nexport let rerenderEntireTree = (state: StateType) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state} dispatch={store.dispatch.bind(store)} store ={store}/>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\nrerenderEntireTree(store.getState());\nstore.subscribe(rerenderEntireTree)\n\n\nreportWebVitals();"],"sourceRoot":""}