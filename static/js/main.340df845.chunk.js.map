{"version":3,"sources":["component/Navbar/Navbar.module.css","component/Dialogs/Dialogs.module.css","component/Profile/MyPosts/MyPosts.module.css","component/Dialogs/DialogItem/DialogItem.module.css","component/Header/Header.module.css","component/Profile/ProfileInfo/ProfileInfo.module.css","component/Profile/MyPosts/Post/Post.module.css","component/Dialogs/Message/Message.module.css","component/Users/users.module.css","component/Header/Header.tsx","component/Navbar/Navbar.tsx","component/Profile/ProfileInfo/ProfileInfo.tsx","component/Profile/MyPosts/Post/Post.tsx","redux/profile-reducer.tsx","component/Profile/MyPosts/MyPostContainer.tsx","component/Profile/MyPosts/MyPosts.tsx","component/Profile/Profile.tsx","component/News/News.tsx","component/Music/Music.tsx","component/Settings/Settings.tsx","component/Dialogs/DialogItem/DialogItem.tsx","component/Dialogs/Message/Message.tsx","redux/dialogs-reducer.tsx","component/Dialogs/DialogContainer.tsx","component/Dialogs/Dialogs.tsx","redux/users-reducer.tsx","component/Users/UsersContainer.tsx","component/Users/Users.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.tsx","index.tsx"],"names":["module","exports","Header","className","style","header","to","src","alt","Navbar","s","nav","item","isActive","active","ProfileInfo","description","Post","props","messages","likesCounts","UPDATE_NEW_POST_TEXT","ADD_POST","initialState","posts","id","message","newPostText","profileReducer","state","action","type","newText","MyPostContainer","connect","profilePage","dispatch","addPost","onNewPostTextChange","postElements","map","p","postsBlock","value","onChange","e","text","currentTarget","console","log","onClick","Profile","News","Music","Settings","DialogItems","dialog","name","Messages","UPDATE_NEW_MESSAGE_TEXT","SEND_MESSAGE","dialogs","newMessage","dialogsReducer","body","DialogContainer","dialogsPage","onSendMessageClick","onUpdateNewMessageChange","dialogsElement","d","messagesElement","m","dialogItems","placeholder","FOLLOW","UNFOLLOW","SET_USERS","users","usersReducer","u","userId","followed","UsersContainer","usersPage","follow","followAC","unfollow","unfollowAC","setUsers","setUsersAC","length","photos","fullName","status","location","country","city","usersPhoto","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.340df845.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__eqcMv\",\"item\":\"Navbar_item__3b-uv\",\"active\":\"Navbar_active__1GiTZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3To99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1Rtas\",\"posts\":\"MyPosts_posts__2LUjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItems\":\"DialogItem_dialogItems__uLUZp\",\"active\":\"DialogItem_active__HIfQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2-4SC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__2330y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1PIDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__GkSED\",\"message\":\"Message_message__1iHMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__2_7Du\"};","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nexport const Header = () => {\r\n    return (\r\n        <header className={style.header}>\r\n         <NavLink to={'/profile'} ><img src='https://i.pinimg.com/236x/71/b3/e4/71b3e4159892bb319292ab3b76900930.jpg' alt={'image'}/></NavLink>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' className={({ isActive }) =>(isActive ?  s.active : \"\")}>Profile</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/dialogs'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>Messages</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/users'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>Users</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/news'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>News</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/music'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>Music</NavLink>\r\n            </div>\r\n            <div  className={s.item}>\r\n                <NavLink to={'/settings'} className={({ isActive }) =>(isActive ?  s.active : \"\")}>Settings</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nexport const ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg' alt={'images'}/>\r\n                <div className={s.description}>ava + description</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\ntype  PostPropsType = {\r\n    messages: string\r\n    likesCounts: number\r\n}\r\n\r\nexport const Post = (props: PostPropsType) => {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <img src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTFb5fMw2UHXHnnNcW6t2Dpa7A_Ubc-9sTvEA&usqp=CAU'} alt={'photo'}/>\r\n            {props.messages}\r\n            <div>\r\n                <span>like</span> {props.likesCounts}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_ TEXT'\r\nconst ADD_POST = 'ADD_POST'\r\n\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCounts: number\r\n}\r\n\r\nexport type PostTypeProps = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n}\r\nlet initialState: PostTypeProps  = {\r\n\r\n    posts: [\r\n        {id: 1, message: 'Hi my friend', likesCounts: 20},\r\n        {id: 2, message: 'How are you', likesCounts: 15},\r\n    ],\r\n    newPostText: \"\"\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionType) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST :\r\n            return {\r\n                ...state,\r\n                posts:[...state.posts,{id: 5, message: state.newPostText, likesCounts: 12,}],\r\n                newPostText : ''\r\n            }\r\n            // let newPost = {\r\n            //     id: 5,\r\n            //     message: state.newPostText,\r\n            //     likesCounts: 12,\r\n            // }\r\n            // let stateCopy = {...state};\r\n            // stateCopy.posts = [...state.posts]\r\n            // stateCopy.posts.push(newPost);\r\n            // stateCopy.newPostText = '';\r\n            // return stateCopy\r\n\r\n        case UPDATE_NEW_POST_TEXT :\r\n            return {\r\n                ...state,\r\n                // posts: [...state.posts ],\r\n                newPostText :action.newText\r\n            }\r\n            // let stateCopy = {...state};\r\n            // stateCopy.posts = [...state.posts]\r\n            // stateCopy.newPostText = action.newText;\r\n            // return stateCopy\r\n\r\n        default  :\r\n            return state\r\n    }\r\n}\r\nexport type ProfileActionType = AddPostType & UpdateNewPostTexType\r\nexport type AddPostType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\nexport type UpdateNewPostTexType = ReturnType<typeof updateNewPostTextAC>\r\nexport const updateNewPostTextAC = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addPostAC, PostType, updateNewPostTextAC} from \"../../../redux/profile-reducer\";\r\n\r\n//\r\n// type MyPostsTypeProps = {\r\n//     // store: StoreType\r\n// }\r\n//\r\n// export const MyPostContainer = (props: MyPostsTypeProps) => {\r\n//     // let state = props.store._state\r\n//     //\r\n//     // let addPost = () => {\r\n//     //     props.store.dispatch(addPostAC())\r\n//     // }\r\n//     // let onNewPostTextChange = (newPostText: string) => {\r\n//     //     props.store.dispatch(updateNewPostTextAC(newPostText))\r\n//     // }\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//             (store) => {\r\n//                 let state = store._state;\r\n//\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostAC())\r\n//                 }\r\n//                 let onNewPostTextChange = (newPostText: string) => {\r\n//                     store.dispatch(updateNewPostTextAC(newPostText))\r\n//                 }\r\n//                 return <MyPosts addPost={addPost}\r\n//                                 onNewPostTextChange={onNewPostTextChange}\r\n//                                 state={state}/>\r\n//             }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\ntype MSTP = {\r\n    newPostText: string\r\n    posts: PostType[]\r\n    // profilePage:PostTypeProps\r\n}\r\n\r\ntype MDTP = {\r\n    addPost: () => void\r\n    onNewPostTextChange: (newPostText: string) => void\r\n}\r\n\r\nlet mapSteToProps = (state: AppStateType): MSTP => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n        // profilePage:state.profilePage\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MDTP => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        onNewPostTextChange: (newPostText: string) => {\r\n            dispatch(updateNewPostTextAC(newPostText))\r\n        }\r\n    }\r\n}\r\nexport const MyPostContainer = connect<MSTP, MDTP, {}, AppStateType>(mapSteToProps, mapDispatchToProps)(MyPosts);","import React, {ChangeEvent} from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {PostType} from \"../../../redux/profile-reducer\";\r\n\r\n\r\ntype MyPostsTypeProps = {\r\n    newPostText: string\r\n    posts: PostType[]\r\n    // profilePage:PostTypeProps\r\n    addPost: () => void\r\n    onNewPostTextChange: (newPostText: string) => void\r\n}\r\n\r\nexport const MyPosts = (props: MyPostsTypeProps) => {\r\n    // let state = props.profilePage\r\n\r\n    let postElements = props.posts.map((p) =>\r\n        <Post\r\n        messages={p.message}\r\n        key={p.id}\r\n        likesCounts={p.likesCounts}/>)\r\n\r\n    let addPostHandler = () => {\r\n        props.addPost()\r\n    }\r\n    let onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value;\r\n        props.onNewPostTextChange(text)\r\n        console.log(text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div><textarea value={props.newPostText} onChange={onChangeHandler}>\r\n                </textarea></div>\r\n                <div>\r\n                    <button onClick={addPostHandler}> Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostContainer} from \"./MyPosts/MyPostContainer\";\r\n\r\n//\r\n// type ProfileTypeProps = {\r\n//     // store: StoreType\r\n// }\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const News =()=>{\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const Music =()=>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const Settings =()=>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css'\r\n\r\ntype DialogItemsPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport const DialogItems = (props: DialogItemsPropsType) => {\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={'/dialogs' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\n\r\ntype MessagesTypeProps = {\r\n    message: string\r\n}\r\nexport const Messages = (props: MessagesTypeProps) => {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n    </div>\r\n}\r\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE_NEW_MESSAGE_TEXT'\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport  type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsPropsType = {\r\n    dialogs: DialogType[]\r\n    messages: MessageType[]\r\n    newMessage: string\r\n}\r\n\r\nlet initialState: DialogsPropsType = {\r\n    dialogs: [\r\n        {id: 1, name: 'Oleg'},\r\n        {id: 2, name: 'Dimas'},\r\n        {id: 3, name: 'Any'},\r\n        {id: 4, name: 'Ilia'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'How are you'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'How are you'},\r\n    ],\r\n    newMessage: \"\"\r\n}\r\n\r\nexport const dialogsReducer = (state= initialState, action: DialogsActionType) => {\r\n    // let stateCopy =  {\r\n    //     ...state,\r\n    //     // messages: [...state.messages]\r\n    // }\r\n    switch (action.type) {\r\n        case SEND_MESSAGE :\r\n            let body = state.newMessage;\r\n            return {\r\n                ...state,\r\n                messages:[...state.messages,{id: 4, message: body}],\r\n                newMessage : ''\r\n            }\r\n        case UPDATE_NEW_MESSAGE_TEXT :\r\n            return {\r\n                ...state,\r\n                newMessage : action.body\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport type DialogsActionType = SendMessageType & UpdateNewMessageTexType\r\nexport type SendMessageType = ReturnType<typeof sendMessageAC>\r\nexport const sendMessageAC = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\nexport type UpdateNewMessageTexType = ReturnType<typeof updateNewMessageTextAC>\r\nexport const updateNewMessageTextAC = (body: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        body\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {DialogsPropsType, sendMessageAC, updateNewMessageTextAC} from \"../../redux/dialogs-reducer\";\r\n//\r\n//\r\n// export type DialogsProps = {\r\n//     // newMessage  : DialogsPropsType\r\n// }\r\n\r\n// export const DialogContainer = (props: DialogsProps) => {\r\n//\r\n// return (\r\n//     <StoreContext.Consumer>\r\n//         {\r\n//             (store: any) => {\r\n//                 let state = store.getState()\r\n//\r\n//                 let onSendMessageClick = () => {\r\n//                     store.dispatch(sendMessageAC())\r\n//                 }\r\n//                 let onUpdateNewMessageChange = (newMessage: string) => {\r\n//                     store.dispatch(updateNewMessageTextAC(newMessage))\r\n//                 }\r\n//                 return <Dialogs state={state}\r\n//                                 onSendMessageClick={onSendMessageClick}\r\n//                                 onUpdateNewMessageChange={onUpdateNewMessageChange}/>\r\n//\r\n//             }\r\n//         }\r\n//     </StoreContext.Consumer>\r\n// )\r\n\r\n\r\n// }\r\n\r\ntype MSTP = {\r\n    dialogsPage:DialogsPropsType\r\n}\r\n\r\ntype MDTP = {\r\n    onSendMessageClick :()=>void\r\n    onUpdateNewMessageChange: (newMessage:string)=>void\r\n}\r\n\r\nlet mapSteToProps = (state: AppStateType):MSTP => {\r\n    return {\r\n        dialogsPage:state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch : Dispatch):MDTP => {\r\n    return {\r\n        onSendMessageClick :()=>{\r\n            dispatch(sendMessageAC())\r\n        },\r\n        onUpdateNewMessageChange: (newMessage:string)=>{\r\n            dispatch(updateNewMessageTextAC(newMessage))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const DialogContainer = connect<MSTP,MDTP,{},AppStateType>(mapSteToProps, mapDispatchToProps)(Dialogs);","import React, {ChangeEvent} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItems} from \"./DialogItem/DialogItem\";\r\nimport {Messages} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"../../redux/dialogs-reducer\";\r\n\r\nexport type DialogsProps = {\r\n    onSendMessageClick: () => void\r\n    onUpdateNewMessageChange: (newMessage: string) => void\r\n    dialogsPage: DialogsPropsType\r\n\r\n}\r\n\r\nexport const Dialogs = (props: DialogsProps) => {\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElement = state.dialogs.map((d) => <DialogItems key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElement = state.messages.map((m) => <Messages key={m.id} message={m.message}/>)\r\n    let newMessage = state.newMessage\r\n\r\n    let onSendMessageClickHandler = () => {\r\n        props.onSendMessageClick()\r\n\r\n    }\r\n\r\n    let onUpdateNewMessageChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        newMessage = e.currentTarget.value\r\n        props.onUpdateNewMessageChange(newMessage)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea placeholder='Enter text' value={newMessage}\r\n                                  onChange={onUpdateNewMessageChangeHandler}> </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClickHandler}>\r\n                            Send\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","const FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\n\r\n\r\nexport type UserType = {\r\n    id: number,\r\n    photos: string\r\n    followed: boolean,\r\n    fullName: string,\r\n    status: string,\r\n    location: {\r\n        country: string,\r\n        city: string\r\n    }\r\n}\r\nexport  type UsersTypeProps = {\r\n    users: UserType[]\r\n}\r\n\r\nlet initialState: UsersTypeProps = {\r\n    users: [],\r\n\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: UsersActionType) => {\r\n    debugger\r\n    switch (action.type) {\r\n\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n        case SET_USERS :\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type UsersActionType = FollowType | UnfollowType | SetUsersType\r\nexport type FollowType = ReturnType<typeof followAC>\r\nexport const followAC = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport type UnfollowType = ReturnType<typeof unfollowAC>\r\nexport const unfollowAC = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport type SetUsersType = ReturnType<typeof setUsersAC>\r\nexport const setUsersAC = (users: UserType[]) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n}\r\nexport default usersReducer;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {followAC, setUsersAC, unfollowAC, UserType} from \"../../redux/users-reducer\";\r\n\r\n\r\ntype MSTP  = {\r\n    users:UserType[]\r\n}\r\n\r\ntype MDTP  = {\r\n    follow: (userId: number) =>void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users:any) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType):MSTP => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        follow: (userId: number) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId: number) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users:UserType[]) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect<MSTP,MDTP,{},AppStateType>(mapStateToProps, mapDispatchToProps)(Users)","import React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport s from './users.module.css'\r\n\r\ntype UsersTypeProps = {\r\n    users: UserType[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: any) => void\r\n}\r\n\r\n\r\nexport const Users = (props: UsersTypeProps) => {\r\n    if (props.users.length === 0) {\r\n        props.setUsers([\r\n            {\r\n                id: 1,\r\n                photos: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSktCCowOqZSCjQWBe0h5Go3wnvv54jBfvzA&usqp=CAU',\r\n                followed: false,\r\n                fullName: \"Oleg\",\r\n                status: \"very good\",\r\n                location: {country: 'Belarus', city: 'Minsk',}\r\n            },\r\n            {\r\n                id: 2,\r\n                photos: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSktCCowOqZSCjQWBe0h5Go3wnvv54jBfvzA&usqp=CAU',\r\n                followed: true,\r\n                fullName: \"Ilia\",\r\n                status: \"very good\",\r\n                location: {country: 'Belarus', city: 'Minsk',}\r\n            },\r\n            {\r\n                id: 3,\r\n                photos: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSktCCowOqZSCjQWBe0h5Go3wnvv54jBfvzA&usqp=CAU',\r\n                followed: false,\r\n                fullName: \"Kodaly\",\r\n                status: \"very good\",\r\n                location: {country: 'Belarus', city: 'Minsk',}\r\n            },\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.users.map(u =>\r\n                    <div key={u.id}>\r\n                      <span>\r\n                          <div>\r\n                              <img\r\n                                  className={s.usersPhoto}\r\n                                  src={u.photos}\r\n                                  alt={'image'}/>\r\n                          </div>\r\n                          <div>\r\n                              {u.followed\r\n                                  ?\r\n                                  <button onClick={() => {\r\n                                      props.unfollow(u.id)\r\n                                  }}>Unfollow</button>\r\n\r\n                                  :\r\n                                  <button onClick={() => {\r\n                                      debugger\r\n                                      props.follow(u.id)\r\n                                  }}>Follow</button>\r\n                              }\r\n                                      </div>\r\n                                      </span>\r\n                        <span>\r\n                                      <span>\r\n                                      <div>{u.fullName}</div>\r\n                                      <div>{u.status}</div>\r\n                                      </span>\r\n                                      <span>\r\n                                      <div>\r\n                                  {u.location.city}\r\n                                      </div>\r\n                                      <div>\r\n                                  {u.location.country}\r\n                                      </div>\r\n                                      </span>\r\n                                      </span>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./component/Header/Header\";\nimport {Navbar} from \"./component/Navbar/Navbar\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {Profile} from \"./component/Profile/Profile\";\nimport {News} from './component/News/News';\nimport {Music} from './component/Music/Music';\nimport {Settings} from \"./component/Settings/Settings\";\nimport {Users} from \"./component/Users/Users\";\nimport {DialogContainer} from \"./component/Dialogs/DialogContainer\";\nimport {UsersContainer} from \"./component/Users/UsersContainer\";\n\n\nconst App = () => {\n\n    return (\n        <div className=\"app-wrapper\">\n            <Header/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n                <Routes>\n                    <Route path={'/profile'} element={<Profile/>}/>\n                    <Route path={'/dialogs'} element={<DialogContainer/>}/>\n                    <Route path={'/users/'} element={<UsersContainer/>}/>\n                    <Route path={'/news/'} element={<News/>}/>\n                    <Route path={'/music/'} element={<Music/>}/>\n                    <Route path={'/settings/'} element={<Settings/>}/>\n                </Routes>\n            </div>\n        </div>\n    );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet rootReducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    // sidebar: sidebarReducer\r\n    usersPage: usersReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducers>\r\nlet store = createStore(rootReducers)\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport  {Provider} from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/redux-store\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n)\n\nreportWebVitals();"],"sourceRoot":""}